from enum import Enum
import textwrap
import locale
from datetime import datetime, timedelta


class NameButtons(Enum):
    """–ö–ª–∞—Å—Å —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∫–Ω–æ–ø–æ–∫"""
    START = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"

    @classmethod
    def get_list_value(cls):
        result = []
        for i in cls:
            result.append(i.value)
        return result

class Messages(Enum):
    """–ö–ª–∞—Å—Å —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    START = textwrap.dedent(
        """
        –≠—Ç–æ –±–æ—Ç ChatGPT + MidJourney –≤ Telegram. 
        –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å ChatGPT. –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å –∏–ª–∏ —Å—Ä–∞–∑—É –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å.
        
        –ö–æ–º–∞–Ω–¥—ã
        /start - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
        /mode - –≤—ã–±—Ä–∞—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å
        /profile - –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        /pay - –∫—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
        /reset - —Å–±—Ä–æ—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        /help - –ø–æ–º–æ—â—å
        /ask - –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å (–≤ –≥—Ä—É–ø–ø–∞—Ö)
        """
    )

    _PROFILE_FREE = textwrap.dedent(
        """
        üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
        
        ID: {tgid}
        –ü–æ–¥–ø–∏—Å–∫–∞: {code_tariff}
        –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–∂–º–∏—Ç–µ /pay
        
        üëæ –õ–∏–º–∏—Ç—ã
        GPT-4o mini ‚Äî –ë–ï–ó–õ–ò–ú–ò–¢
        GPT-4o - –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ (/pay)
        Midjourney v5.2 - –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ (/pay)
        Midjourney v6.0 - –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ (/pay)
        """
    )

    _PROFILE_NOT_FREE = textwrap.dedent(
        """
        üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
        
        ID: {tgid}
        –ü–æ–¥–ø–∏—Å–∫–∞: {code_tariff}
        –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞–∂–º–∏—Ç–µ /pay
    
        üëæ –õ–∏–º–∏—Ç—ã
        GPT-4o mini ‚Äî –ë–ï–ó–õ–ò–ú–ò–¢
        GPT-4o - {available_chatgpt_4o}/{limit_chatgpt_4o} (/pay)
        Midjourney v5.2 - {available_mj_5_2}/{limit_mj_5_2} (/pay)
        Midjourney v6.0 - {available_mj_6_0}/{limit_mj_6_0} (/pay)
        
        üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤: {update_limit}
        """
    )

    RESET = textwrap.dedent(
        """
        –ö–æ–Ω—Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!
        """
    )

    HELP = textwrap.dedent(
        """
        üìö –û –±–æ—Ç–µ
        
        –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π API ChatGPT –æ—Ç OpenAI –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏. –ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º 30 –∑–∞–ø—Ä–æ—Å–æ–≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –û–Ω–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é. 
        
        –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /pay.
        
        1. –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç?
        –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, —Ç–æ –µ—Å—Ç—å –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –≠—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —É—Ç–æ—á–Ω–∏—Ç—å –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ –≤–µ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥ –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–π —Ç–µ–º—ã. –ö–æ–º–∞–Ω–¥–∞ /reset —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç.
        
        2. –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        ChatGPT-4o —É–º–µ–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫ –∑–∞–ø—Ä–æ—Å—É.
        
        3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        ‚Äì –ß—Ç–æ–±—ã –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ Midjourney, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: ¬´/img —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞¬ª.
        ‚Äì –ß—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥—Ä—É–≥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –µ–≥–æ –∫ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –∏–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.
        ‚Äì –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–∞—Ö.
        
        4. –õ–∏–º–∏—Ç—ã –∏ –ø–æ–¥–ø–∏—Å–∫–∞
        –ß—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É –±–µ–∑ –ø–µ—Ä–µ–≥—Ä—É–∑–æ–∫, –º—ã –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏–º–∏—Ç—ã –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é. –°–µ–π—á–∞—Å –ª–∏–º–∏—Ç—ã —Ç–∞–∫–∏–µ:
        
        ü™´ –ë–µ—Å–ø–ª–∞—Ç–Ω–æ:
        ‚Ä¢ GPT-4o mini ‚Äì –ë–ï–ó–õ–ò–ú–ò–¢.
        
        üîã –í –ø–æ–¥–ø–∏—Å–∫–µ Plus:
        ‚Ä¢ GPT-4o mini ‚Äì –ë–ï–ó–õ–ò–ú–ò–¢.
        ‚Ä¢ GPT-4o ‚Äì 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
        ‚Ä¢ o1-preview ‚Äì 20 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
        ‚Ä¢ o1-mini ‚Äì 60 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
        ‚Ä¢ GPT-4 Vision (—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
        ‚Ä¢ Midjourney v5.2 ‚Äì 45 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
        ‚Ä¢ Midjourney v6.0 ‚Äì 20 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
        
        –í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–¥–ø–∏—Å–∫–æ–π –≤ —Ä–∞–∑–¥–µ–ª–µ /profile.
        
        5. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @Neyrosetka_com. –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: 08:00 - 23:00 –ø–æ –º—Å–∫.
        """
    )

    PAY = textwrap.dedent(
        """
        –ü–æ–¥–ø–∏—Å–∫–∞ ‚ö°Ô∏èPlus:

        - GPT-4o mini ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ;
        - GPT-4o ‚Äî 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å;
        - o1-preview ‚Äî 20 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å;
        - o1-mini ‚Äî 60 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å;
        - GPT-4 Vision (–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π);
        - Midjourney v5.2 ‚Äî 45 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å;
        - Midjourney v6.0 ‚Äî 20 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å.
        
        –°—Ç–æ–∏–º–æ—Å—Ç—å: 489—Ä –≤ –º–µ—Å—è—Ü
        """
    )

    CHOICE_MODE = textwrap.dedent(
        """
        ü§ñ –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π:
        
        1. ChatGPT-4o
        –û—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å —Å –≤—ã—Å–æ–∫–∏–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º. –û–ø—Ç–∏–º–∞–ª—å–Ω–∞ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∑–∞–¥–∞—á. 
        
        2. ChatGPT-4o mini
        –î–æ—Å—Ç—É–ø–Ω–∞—è –Ω–µ–±–æ–ª—å—à–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –∏ –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á. 
        
        3. o1-preview 
        –†–∞–Ω–Ω—è—è –≤–µ—Ä—Å–∏—è, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–∞—è –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —à–∏—Ä–æ–∫–∏—Ö –æ–±—â–∏—Ö –∑–Ω–∞–Ω–∏–π.
        
        4. o1-mini
        –ë–æ–ª–µ–µ –±—ã—Å—Ç—Ä–∞—è –∏ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è, –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∞—è –¥–ª—è –∑–∞–¥–∞—á –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –∏ –Ω–∞—É–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ç—Ä–µ–±—É—é—Ç –æ–±—à–∏—Ä–Ω—ã—Ö –æ–±—â–∏—Ö –∑–Ω–∞–Ω–∏–π.          
        """
    )

    CHOICE = textwrap.dedent(
        """
        –ú–æ–¥–µ–ª—å {model_name} –≤—ã–±—Ä–∞–Ω–∞!
        """
    )

    ERROR = textwrap.dedent(
        """
        ü§ñ –ü–æ—Ö–æ–∂–µ —É —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π —ç—Ç–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –º—ã –≤–º–µ—Å—Ç–µ —Å –í–∞–º–∏ –∂–¥–µ–º –ø–æ–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –¥–æ—Å—Ç—É–ø, 
        –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –¥—Ä—É–≥–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é –∏–ª–∏ —Å–µ—Ä–≤–∏—Å–æ–º.

        * –í–∞—à–∏ —Ç–æ–∫–µ–Ω—ã –Ω–µ –±—ã–ª–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω—ã,  —Ç–∫ –∑–∞–ø—Ä–æ—Å –≤  –Ω–µ–π—Ä–æ—Å–µ—Ç—å –Ω–µ –ø—Ä–æ—à–µ–ª.
        """
    )

    @classmethod
    def create_message_choice_model(cls, model_name: str):
        return cls.CHOICE.value.format(
            model_name=model_name
        )

    @staticmethod
    def format_date(dt: datetime) -> str:
        """–í–µ—Ä–Ω–∏ –¥–∞—Ç—É –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ

        –ü—Ä–∏–º–µ—Ä: '—Å—Ä–µ–¥–∞, 11 —Å–µ–Ω—Ç—è–±—Ä—è 2024 –≥. –≤ 15:20 (–º—Å–∫)'
        """
        dt = dt.replace(hour=0, minute=0, second=0, microsecond=0)
        formating_date = dt.strftime('%A, %d %B %Y –≥. –≤ %H:%M')
        formating_date = formating_date.lower().replace(" 0", " ")
        formating_date += ' (–º—Å–∫)'
        return formating_date

    @classmethod
    def create_message_profile(cls, profile):
        locale.setlocale(locale.LC_TIME, 'ru_RU.UTF-8')
        formating_date = cls.format_date(datetime.now() + timedelta(days=1))
        if profile.tariffs.name == 'Free':
            return cls._PROFILE_FREE.value.format(
                tgid=profile.tgid,
                code_tariff=profile.tariffs.name,
            )
        else:
            return cls._PROFILE_NOT_FREE.value.format(
                tgid=profile.tgid,
                code_tariff=profile.tariffs.name,
                available_chatgpt_4o=profile.chatgpt_4o_daily_limit,
                limit_chatgpt_4o=profile.tariffs.chatgpt_4o_daily_limit,
                available_mj_5_2=profile.mj_daily_limit_5_2,
                limit_mj_5_2=profile.tariffs.midjourney_5_2_daily_limit,
                available_mj_6_0=profile.mj_daily_limit_6_0,
                limit_mj_6_0=profile.tariffs.midjourney_6_0_daily_limit,
                update_limit=formating_date,
            )


class MjOption(Enum):
    """–ö–ª–∞—Å—Å —Å–æ —Å–ø–æ—Å–æ–±–∞–º–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ mj api"""
    VARIATION = 'variation'
    UPSAMPLE = 'upsample'

class PaymentName(Enum):
    """–ö–ª–∞—Å—Å —Å–æ —Å–ø–æ—Å–æ–±–∞–º–∏ –æ–ø–ª–∞—Ç—ã"""
    STARS = "stars"
    ROBOKASSA = "robokassa"

class Errors(Enum):
    """–ö–ª–∞—Å—Å —Å –æ—à–∏–±–∫–∞–º–∏"""
    ERROR_ACTIVE_GENERATE = 'You have already activated generation. Wait for it to complete.'
    ERROR_BALANCE_FREE = "Top up your balance. Available to you {limit_current_model} generations."
    ERROR_BALANCE_PAID = "Top up your balance."
    ERROR_TARIFF = "Model {} is not available for tariff {}"
    NON_ERROR = "Ok"

    @classmethod
    def error_balance_free(cls, limit_current_model: str):
        return cls.ERROR_BALANCE_FREE.value.format(limit_current_model)

    @classmethod
    def error_tariff(cls, ai_model_id: str, tariff_name: str):
        return cls.ERROR_TARIFF.value.format(ai_model_id, tariff_name)

class AiModelName(Enum):
    """–ö–ª–∞—Å—Å —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π"""
    GPT_4_O = "gpt-4o"
    GPT_4_O_MINI = "gpt-4o-mini"
    MIDJOURNEY_6_0 = "mj-6-0"
    MIDJOURNEY_5_2 = "mj-5-2"
    GPT_O1_PREVIEW = "o1-preview"
    GPT_O1_MINI = "o1-mini"

    @classmethod
    def get_list_value(cls):
        result = []
        for i in cls:
            result.append(i.value)
        return result

    @classmethod
    def get_need_format(cls, model):
        result = ''
        if model == cls.GPT_4_O.value:
            result = 'GPT-4o'
        elif model == cls.GPT_4_O_MINI.value:
            result = 'GPT-4o-mini'
        elif model == cls.MIDJOURNEY_5_2.value:
            result = 'Midjourney 6.0'
        elif model == cls.MIDJOURNEY_6_0.value:
            result = 'Midjourney 5.2'
        elif model == cls.GPT_O1_PREVIEW.value:
            result = 'o1-preview'
        elif model == cls.GPT_O1_MINI.value:
            result = 'o1-mini'
        return result

    @classmethod
    def get_enum_field_by_value(cls, value: str):
        for field in cls:
            if field.value == value:
                return field
        return None


class TariffCode(Enum):
    """–ö–ª–∞—Å—Å —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ç–∞—Ä–∏—Ñ—Ñ–æ–≤"""
    FREE = "Free"
    PREMIUM = "premium"
